{"version":3,"file":"MoveTo-3e08db22.js","sources":["../../src/comp/Pages/ActionBar.svelte","../../node_modules/svelte-material-icons/EmailOutline.svelte","../../node_modules/svelte-material-icons/EmailOpenOutline.svelte","../../node_modules/svelte-material-icons/EmailCheckOutline.svelte","../../node_modules/svelte-material-icons/EmailSendOutline.svelte","../../node_modules/svelte-material-icons/EmailReceiveOutline.svelte","../../node_modules/svelte-material-icons/FolderMoveOutline.svelte","../../src/comp/Pages/MoveTo.svelte"],"sourcesContent":["<style>\n  x-actionbar {\n    flex: none;\n    position: relative;\n    padding: 0.25em 1em 0 1em;\n    height: 2.75em;\n    border-bottom: rgba(0,0,0,0.1) 1px solid;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    z-index: 10;\n    transition: box-shadow 200ms ease;\n  }  \n\n  x-actionbar.scrolled {\n    box-shadow: rgba(0,0,0,0.3) 0 0.35em 0.15em -0.2em; \n  }\n\n  x-actionbar :global(x-action-group) {\n    display: flex;\n    flex: none;\n    flex-direction: row;\n    margin-inline-end: 0.75em;\n  }\n\n  x-actionbar :global(x-action-group:empty) {\n    display: none;\n  }\n\n  x-actionbar :global(x-action),\n  x-actionbar :global(.x-action) {\n    position: relative;\n    flex: none;\n    width: 2em;\n    height: 2em;\n    border-radius: 50%;\n    font-size: 1.4em;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    user-select: none;\n    transition: color 200ms ease;\n    color: #333;\n  }\n\n  x-actionbar :global(x-action:hover),\n  x-actionbar :global(.x-action:hover){\n    color: #111;\n  }\n \n  /*\n  @media screen and (max-width: 768px) {\n    x-actionbar > :global(x-action-group:first-child > x-action:first-child:before),\n    x-actionbar > :global(x-action-group:first-child > .x-action:first-child:before) {\n      left: 0;\n      transform: translate(0, -100%);\n    }\n\n    x-actionbar:dir(rtl) > :global(x-action-group:first-child > x-action:first-child:before),\n    x-actionbar:dir(rtl) > :global(x-action-group:first-child > .x-action:first-child:before) {\n      right: 0;\n      left: auto;\n      transform: translate(0, -100%);\n    }\n  }\n  */\n</style>\n\n<script>\n  export let scrolled = false;\n</script>\n\n<x-actionbar class:scrolled>\n  <slot />\n</x-actionbar>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M22 6C22 4.9 21.1 4 20 4H4C2.9 4 2 4.9 2 6V18C2 19.1 2.9 20 4 20H20C21.1 20 22 19.1 22 18V6M20 6L12 11L4 6H20M20 18H4V8L12 13L20 8V18Z\" fill=\"{color}\"/></svg>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M21.03 6.29L12 .64L2.97 6.29C2.39 6.64 2 7.27 2 8V18C2 19.1 2.9 20 4 20H20C21.1 20 22 19.1 22 18V8C22 7.27 21.61 6.64 21.03 6.29M20 18H4V10L12 15L20 10V18M12 13L4 8L12 3L20 8L12 13Z\" fill=\"{color}\"/></svg>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M23.5 17L18.5 22L15 18.5L16.5 17L18.5 19L22 15.5L23.5 17M13 18H3V8L11 13L19 8V13H21V6C21 4.9 20.1 4 19 4H3C1.9 4 1 4.9 1 6V18C1 19.1 1.9 20 3 20H13V18M19 6L11 11L3 6H19Z\" fill=\"{color}\"/></svg>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M13 17H17V14L22 18.5L17 23V20H13V17M20 4H4A2 2 0 0 0 2 6V18A2 2 0 0 0 4 20H11V18H4V8L12 13L20 8V14H22V6A2 2 0 0 0 20 4M12 11L4 6H20Z\" fill=\"{color}\"/></svg>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M22 20H18V23L13 18.5L18 14V17H22V20M20 4H4A2 2 0 0 0 2 6V18A2 2 0 0 0 4 20H11V18H4V8L12 13L20 8V15H22V6A2 2 0 0 0 20 4M12 11L4 6H20Z\" fill=\"{color}\"/></svg>","<script>\n  export let size = \"1em\";\n  export let width = size;\n  export let height = size;\n  export let color = \"currentColor\";\n  export let viewBox = \"0 0 24 24\";\n</script>\n\n<svg width=\"{width}\" height=\"{height}\" viewBox=\"{viewBox}\"><path d=\"M20 18H4V8H20V18M12 6L10 4H4C2.9 4 2 4.89 2 6V18C2 19.11 2.9 20 4 20H20C21.11 20 22 19.11 22 18V8C22 6.9 21.11 6 20 6H12M11 14V12H15V9L19 13L15 17V14H11Z\" fill=\"{color}\"/></svg>","<style>\n  .anchor {\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    font-size: 1rem;\n  }\n</style>\n\n<script>\n  export let mailbox; // Writable<Mailbox>\n  export let selection; // Writable<Writable<Message>[]>\n  \n  import {createEventDispatcher} from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  import {mailboxMeta} from \"lib@util.js\";\n  import {inbox, trash, junk, sent, drafts, others} from \"lib@client/mailboxes.js\";\n  import {moveTo} from \"lib@client/messages.js\";\n  import MoveTo from \"svelte-material-icons/FolderMoveOutline.svelte\";\n\n  import {getContext} from \"svelte\";\n  const {locale: l} = getContext(\"app\");\n  export let locale = $l;\n\n  let folders = [];\n  $: {\n    if(mailbox === inbox) {\n      folders = [\n        ...$others,\n        junk,\n        trash,\n      ].filter(m => m && !!m.get())\n    } else if (mailbox === trash || mailbox === junk) {\n      folders = [\n        inbox,\n        ...$others,\n        mailbox !== trash && trash,\n        mailbox !== junk && junk\n      ].filter(m => m && !!m.get())\n    } else if ($others.includes(mailbox)) {\n      folders = [\n        inbox,\n        ...$others.filter(m => m !== mailbox)\n      ].filter(m => m && !!m.get())\n    } else {\n      folders = [];\n    }\n  }\n\n  let metas, ids;\n  $: metas = folders.map(f => mailboxMeta(f.get(), $l.mailbox.title));\n  $: ids = $selection.map(m => m.get().id);\n\n  const to = (to) => {\n    moveTo(mailbox.get().id, ids, to.get().id);\n    dispatch(\"moved\", {to, messages: $selection})\n  }\n\n  export let menuOpen = false;\n\n  import {Ripple} from \"svelte-mui\";\n  import Popup from \"comp@Popup.svelte\";\n  import Menu from \"comp@Menu/Menu.svelte\";\n  import MenuItem from \"comp@Menu/MenuItem.svelte\";\n\n  const toggle = () => menuOpen = !menuOpen;\n</script>\n\n{#if folders.length}\n  <x-action class=\"btn-dark\" class:hover={menuOpen} on:click={toggle} data-tooltip={locale.actions.moveTo}>\n    <MoveTo/>\n    <div class=\"anchor\">\n      <Popup anchor=\"top-left\" bind:open={menuOpen}>\n        <Menu>\n          {#each folders as box, i}\n            <MenuItem icon={metas[i].icon} on:click={() => to(box)}>\n              {metas[i].label}\n            </MenuItem>\n          {/each}\n        </Menu>\n      </Popup>\n    </div>\n    <Ripple />\n  </x-action>\n{/if}"],"names":["scrolled","ctx","size","width","height","color","viewBox","actions","moveTo","label","icon","length","mailbox","selection","dispatch","createEventDispatcher","locale","l","getContext","metas","ids","$l","folders","to","get","id","messages","$selection","menuOpen","inbox","$others","junk","trash","filter","m","includes","map","f","mailboxMeta","title","box"],"mappings":"4pCACaA,GAAW,yZCO2LC,kBAAtMA,mBAAiBA,oBAAmBA,wDAAkKA,uBAAtMA,wBAAiBA,yBAAmBA,yDAPpCC,EAAO,gBACPC,EAAQD,aACRE,EAASF,YACTG,EAAQ,2BACRC,EAAU,yiBCG2OL,kBAArPA,mBAAiBA,oBAAmBA,wDAAiNA,uBAArPA,wBAAiBA,yBAAmBA,0DAPpCC,EAAO,gBACPC,EAAQD,aACRE,EAASF,YACTG,EAAQ,2BACRC,EAAU,giBCG+NL,kBAAzOA,mBAAiBA,oBAAmBA,wDAAqMA,uBAAzOA,wBAAiBA,yBAAmBA,0DAPpCC,EAAO,gBACPC,EAAQD,aACRE,EAASF,YACTG,EAAQ,2BACRC,EAAU,2fCG0LL,kBAApMA,mBAAiBA,oBAAmBA,wDAAgKA,uBAApMA,wBAAiBA,yBAAmBA,0DAPpCC,EAAO,gBACPC,EAAQD,aACRE,EAASF,YACTG,EAAQ,2BACRC,EAAU,2fCG0LL,kBAApMA,mBAAiBA,oBAAmBA,wDAAgKA,uBAApMA,wBAAiBA,yBAAmBA,0DAPpCC,EAAO,gBACPC,EAAQD,aACRE,EAASF,YACTG,EAAQ,2BACRC,EAAU,ghBCG+ML,kBAAzNA,mBAAiBA,oBAAmBA,wDAAqLA,uBAAzNA,wBAAiBA,yBAAmBA,0DAPpCC,EAAO,gBACPC,EAAQD,aACRE,EAASF,YACTG,EAAQ,2BACRC,EAAU,ygBCoEmBL,cAAAA,iQAH0CA,KAAOM,QAAQC,oBAAzDP,4GAAoBA,qFAGpBA,6CAH0CA,KAAOM,QAAQC,iDAAzDP,+MAO3BA,KAAMA,OAAGQ,gFAATR,KAAMA,OAAGQ,0FADIR,KAAMA,OAAGS,iMAATT,KAAMA,OAAGS,+JADpBT,0BAALU,uNAAKV,aAALU,+HAAAA,8DAAAA,uaANPV,KAAQU,oFAARV,KAAQU,8SApEAC,gBACAC,eAGLC,EAAWC,KAQVC,OAAQC,GAAKC,EAAW,+BA4B3BC,EAAOC,UA3BAJ,EAASK,KAEhBC,WA6BEC,EAAMA,IACVf,EAAOI,EAAQY,MAAMC,GAAIL,EAAKG,EAAGC,MAAMC,IACvCX,EAAS,SAAUS,GAAAA,EAAIG,SAAUC,kBAGxBC,GAAW,kMAhCjBhB,IAAYiB,MACbP,MACKQ,EACHC,EACAC,GACAC,OAAOC,GAAKA,KAAOA,EAAEV,QACdZ,IAAYoB,GAASpB,IAAYmB,MAC1CT,GACEO,KACGC,EACHlB,IAAYoB,GAASA,EACrBpB,IAAYmB,GAAQA,GACpBE,OAAOC,GAAKA,KAAOA,EAAEV,QACdM,EAAQK,SAASvB,OAC1BU,GACEO,KACGC,EAAQG,OAAOC,GAAKA,IAAMtB,IAC7BqB,OAAOC,GAAKA,KAAOA,EAAEV,YAEvBF,4BAKDH,EAAQG,EAAQc,IAAIC,GAAKC,EAAYD,EAAEb,MAAOH,EAAGT,QAAQ2B,2BACzDnB,EAAMO,EAAWS,IAAIF,GAAKA,EAAEV,MAAMC,6BAchBG,GAAYA,kBAmBwBL,EAAGiB,eAHpBZ"}